<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ddosirak.mapper.ProductionPerformanceMapper">
  
  	<!-- 실적 등록 -->
  	<insert id="insertProdPerf">
  		insert into prod_perf_add
  		(item_code, item_name, perf_gobd, err_reason, remark, pfQTY, perf_date, wo_code)
  		values
  		(#{item_code}, #{item_name}, #{perf_gobd}, #{err_reason}, #{remark}, #{pfQTY}, #{perf_date}, #{wo_code})
  	</insert>
  	<!-- 실적 등록 -->
  	
  	<!-- 실적 현황 -->
  	<select id="prodPerfList" resultType="com.ddosirak.domain.ProductionPerformanceVO">
  		SELECT a.perf_id, a.item_code, a.item_name, a.perf_gobd, a.err_reason, a.remark, a.pfQTY, a.perf_date, a.wo_code, a.unit
		FROM prod_perf_add a
		LEFT OUTER JOIN prod p ON a.wo_code = p.wo_code
		WHERE a.wo_code = #{wo_code}
		order by perf_id desc
		LIMIT #{startRow}, #{pageSize}
  	</select>
  	<!-- 실적 현황 -->
  	
  	<!-- 실적 수정 조회 -->
  	<select id="perfUpdateList" resultType="com.ddosirak.domain.ProductionPerformanceVO">
  		SELECT a.perf_id, a.item_code, a.item_name, a.perf_gobd, a.err_reason, a.remark, a.pfQTY, a.perf_date, a.wo_code, a.unit
		FROM prod_perf_add a
		LEFT OUTER JOIN prod p ON a.wo_code = p.wo_code
		WHERE a.perf_id = #{perf_id}
  	</select>
  	<!-- 실적 수정 조회 -->
  	
  	<!-- 실적 수정 동작 -->
	<update id="perfUpdate">
		UPDATE prod_perf_add
		SET item_code=#{item_code}, item_name=#{item_name}, perf_gobd=#{perf_gobd}, err_reason=#{err_reason}, remark=#{err_reason}
		WHERE perf_id=#{perf_id}
	</update>
  	<!-- 실적 수정 동작 -->
  	
  	<!-- 실적 삭제 동작 -->
  	<delete id="perfDelete">
  		DELETE FROM prod_perf_add WHERE perf_id=#{perf_id}
	</delete>
  	<!-- 실적 삭제 동작 -->
  	
  	<!-- checkY 양품체크 --> 
	<select id="checkY"  resultType="boolean">
	    select
		count(*)
		from
		(select
		it.oQTY,
	    sum(if(p.perf_gobd='n',p.pfQTY,0)) as "n"
		from prod_perf_add p join prod it
		on it.wo_code = p.wo_code
	    where it.wo_code = #{wo_code}
	    group by it.wo_code
		having it.oQTY &lt;= sum(if(p.perf_gobd='n',p.pfQTY,0))) as table1
	</select>  
	
	<!-- 지시상태 체크 -->
	<select id="getInstrMap" resultType="String">
		  SELECT
		    wo_status
		  FROM
		    prod
		  WHERE
		    wo_code = #{wo_code}
	</select>
	
	<!-- 작업지시의 실적등록 갯수 -->
  	<select id="prefcount" resultType="Integer">
  	select count(perf_id)
  	from prod_perf_add
  	where wo_code=#{wo_code}
  	</select> 
  	  
  	<!-- pqtydel --> 
  	<update id="pqtydel">
	  UPDATE prod
	  SET pQTY = pQTY - #{pfQTY}
	  WHERE wo_code = #{wo_code}
  	</update>
  	 
  	<!-- etccount -->
  	<select id="etccount" resultType="java.lang.Integer">
	SELECT COUNT(*)
	FROM prod_perf_add a
	LEFT OUTER JOIN prod p ON a.wo_code = p.wo_code
	WHERE a.wo_code = #{wo_code}
  	</select> 
  	 
  	 
  	<update id="turnclose"> <!-- 지시상태 마감으로 변경 -->
	update prod
	set wo_status = '마감'
	where wo_code = #{wo_code}
	</update>
	
	<update id="turnstart"> <!-- 지시상태 시작으로 변경 -->
	update prod
	set wo_status = '시작'
	where wo_code = #{wo_code}
	</update>

  	<update id="turnwork"> <!-- 지시상태 지시로 변경 -->
	update prod
	set wo_status = '지시'
	where wo_code = #{wo_code}
	</update>
  	
<!--   	.qtydel 자재감소 -->
  	<update id="qtydel"> <!-- 지시상태 지시로 변경 -->
	update material_detail
	set tQTY = tQTY- #{material_con}
	where material_code = #{material_code}
	</update>
  	
  </mapper>
  