<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ddosirak.mapper.EmployeeMapper">
  	<!-- 사원 동작 -->
  	<!-- 사원 추가 동작 -->
  	<insert id="insertEmployee">
  		insert into emp_main 
  		(employee_id, employee_name, jumin, department_name, position, phone_num, line_num, email, 
  		address, extraaddress , post_num, marriage, emp_date, gender, employee_photo, employee_status, year_sal, sal_account, bank_name, working_hours) 
  		values (#{employee_id},#{employee_name},#{jumin},#{department_name},#{position},#{phone_num},#{line_num},#{email},
  		#{address},#{extraaddress},#{post_num}, #{marriage},#{emp_date}, #{gender}, #{employee_photo}, #{employee_status}, #{year_sal}, #{sal_account}, #{bank_name}, #{working_hours} )
  	</insert>
  	<!-- 사원 추가 동작 -->
  	
  	<!-- 사원 프로필 사진 추가 동작 -->
  	<update id="setEmployee_photo_URL">
  		UPDATE emp_main SET employee_photo=#{employee_photo} WHERE employee_id = #{employee_id}
  	</update>
  	<!-- 사원 프로필 사진 추가 동작 -->
  	
  	<!-- 사원 아이디 비밀번호 부여 -->
  	<insert id="setEmployeeIDPW">
  		INSERT INTO emp_login
  		(employee_id, employee_pw, employee_name)
  		VALUES (#{employee_id}, #{employee_pw}, #{employee_name})
  	</insert>
  	<!-- 사원 아이디 비밀번호 부여 -->
  	
  	<!-- 사원번호 부여를 위한 계산 동작 -->
  	<select id="getMaxEmployee_id" resultType="Integer">
  		SELECT MAX(employee_id) FROM emp_main WHERE position != '일용' 
  	</select>
  	
  	<select id="getMaxEmployee_id_al" resultType="Integer">
  		SELECT MAX(employee_id) FROM emp_main WHERE position='일용' 
  	</select>
  	<!-- 사원번호 부여를 위한 계산 동작 -->

  	<!-- 사원 정보 조회 -->
  	<select id="getEmployee" resultType="com.ddosirak.domain.EmployeeVO">
		SELECT * FROM emp_main WHERE employee_id=#{employee_id}
		  	
  	</select>
  	<!-- 사원 정보 조회 -->
  	
  	<!-- 사원 목록 출력-->
  	<select id="empList" resultType="com.ddosirak.domain.EmployeeVO">
		SELECT * FROM emp_main
		ORDER BY emp_date DESC
		LIMIT #{startRow}, #{pageSize}
  	</select>
  	<!-- 사원 목록 출력 -->
  	
  	<!-- 회원정보 수정 -->
  	<update id="updateEmployee">
  		UPDATE emp_main SET employee_name=#{employee_name}, jumin=#{jumin},department_name=#{department_name},position=#{position},phone_num=#{phone_num},line_num=#{line_num}, 
  		address=#{address},extraaddress=#{extraaddress},post_num=#{post_num},marriage=#{marriage},emp_date=#{emp_date},gender=#{gender}, employee_photo=#{employee_photo}, email=#{email}, employee_status=#{employee_status} 
  		WHERE employee_id=#{employee_id}
  	</update>
  	<!-- 회원정보 수정 -->
  	
  	
  	<!-- 일용직 직원 수 -->
  		<select id="alCount_all" resultType="Integer">
  			SELECT COUNT(employee_id) FROM emp_main WHERE position='일용' AND working_hours='전일반'  
  		</select>
  		<select id="alCount_am" resultType="Integer">
  			SELECT COUNT(employee_id) FROM emp_main WHERE position='일용' AND working_hours='오전반'
  		</select>
  		<select id="alCount_pm" resultType="Integer">
  			SELECT COUNT(employee_id) FROM emp_main WHERE position='일용' AND working_hours='오후반'
  		</select>
  	<!-- 일용직 직원 수 -->
  	<!-- 임직원 수 -->
  	  	<select id="empCount" resultType="Integer">
  			SELECT COUNT(employee_id) FROM emp_main WHERE position != '일용' 
  		</select>
  	<!-- 임직원 수 -->
  	<!-- 사원 동작 -->
  	
  	<!-- 급여 동작 -->

  
  	<!-- 휴가 목록 출력 -->
  	<select id="vacationList" resultType="com.ddosirak.domain.EmployeevacationVO">
		SELECT * FROM emp_vacation  
  	</select>
  	<!-- 휴가 목록 출력 -->
  

  	<!-- 사원 휴가 신청  -->
  	<insert id="insertVacation">
	insert into emp_vacation (employee_id, position, department_name, phone_num, vacation_management, vacation_start,vacation_finish)
	values(#{employee_id},#{position},#{department_name},#{phone_num},#{vacation_management},#{vacation_start},#{vacation_finish})
  	</insert>
  	<!-- 사원 휴가 신청  -->
  	
  	<!-- 나의 휴가 목록 출력 -->
  	<select id="myvacationList" resultType="com.ddosirak.domain.EmployeevacationVO">
  		SELECT * FROM emp_vacation 
  	</select>
  	<!-- 나의 휴가 목록 출력 -->
  	
  	<!-- 휴가 수정 -->
  	<update id="vacationmodify">
  	UPDATE emp_vacation 
  	SET employee_id=#{employee_id}, position=#{position}, department_name=#{department_name},
  	phone_num=#{phone_num}, vacation_management=#{vacation_management}, vacation_start=#{vacation_start}, vacation_finish=#{vacation_finish}
  	where vacation_id=#{vacation_id}
  	</update>
  	<!-- 휴가 수정 -->
  	
  	<!-- 휴가 수정 정보 조회 -->
  	<select id="vacationim" resultType="com.ddosirak.domain.EmployeevacationVO">
		SELECT * FROM emp_vacation WHERE vacation_id=#{vacation_id}
  	</select>
  	<!-- 휴가 수정 정보 조회 -->
  	<!-- 급여 정보 등록 -->
  	<update id="salaryInsert">
		 UPDATE emp_main
  		 SET sal_account = #{sal_account},bank_name=#{bank_name} , year_sal=#{year_sal} 
  		 WHERE employee_id=#{employee_id}
	</update>
	<!-- 급여 정보 등록 -->
	<!-- 급여 정보 조회 -->
	<select id="getSalaryinfo" resultType="com.ddosirak.domain.SalaryVO">
		SELECT * FROM emp_salary WHERE employee_id = #{employee_id}
	</select>
	<!-- 급여 정보 조회 -->
	<!-- 급여 정보 조회 (명세서) -->
	<select id="getEmpSalaryinfo" resultType="com.ddosirak.domain.SalaryVO">
		SELECT * FROM emp_salary WHERE employee_id = #{employee_id} AND sal_date = #{sal_date} limit 1
	</select>
	<!-- 급여 정보 조회 (명세서) -->
	<!-- 급여 지급 -->
	<insert id="salaryPay">
		INSERT IGNORE INTO emp_salary (employee_id, salary, sal_account, bank_name, sal_date)
		SELECT m.employee_id, ROUND(m.year_sal/12*0.91, 2) AS salary, m.sal_account, m.bank_name, CURDATE() AS sal_date
		FROM emp_main m
		WHERE m.employee_id = #{employee_id}
	</insert>
	<!-- 급여 지급 -->
	<!-- 일용직 급여 지급 -->
	<insert id="al_salaryPay">
		INSERT IGNORE INTO emp_salary (employee_id, salary, sal_account, bank_name, sal_date)
		SELECT m.employee_id, m.year_sal AS salary, m.sal_account, m.bank_name, CURDATE() AS sal_date
		FROM emp_main m
		WHERE m.employee_id = #{employee_id}
	</insert>
	<!-- 일용직 급여 지급 -->

	
  	<!-- 급여 동작 -->
  	
  	<!-- 사원 일자별 출퇴근현황 출력 동작 -->
  	<select id="getCheckList" resultType="com.ddosirak.domain.EmployeeCheckVO">
  		SELECT * FROM emp_check WHERE DATE(date_time) = DATE(#{date_time}) AND employee_id = #{employee_id}
  	</select>
  	<!-- 사원 일자별 출퇴근현황 출력 동작 -->
  	<!-- 출근사원수 -->
  	<select id="getInEmp" resultType="com.ddosirak.domain.EmployeeCheckVO">
  		SELECT * FROM emp_check 
  		WHERE DATE(date_time) = DATE(NOW()) AND emp_in IS NOT NULL 
  		ORDER BY date_time DESC 
  	</select>
  	<!-- 출근사원수 -->
  	<!-- 퇴근사원수 -->
  	<select id="getOutEmp" resultType="com.ddosirak.domain.EmployeeCheckVO">
  		SELECT * FROM emp_check  
  		WHERE DATE(date_time) = DATE(NOW()) AND emp_out IS NOT NULL 
  		ORDER BY date_time DESC 
  	</select>
  	<!-- 퇴근사원수 -->
  	
<!-- 페이징 -->
  	<!-- 출근사원수 -->
  	<select id="getInEmpPage" resultType="com.ddosirak.domain.EmployeeCheckVO">
  		SELECT * FROM emp_check 
  		WHERE DATE(date_time) = DATE(NOW()) AND emp_in IS NOT NULL 
  		ORDER BY date_time DESC 
  		LIMIT #{startRow}, #{pageSize}
  	</select>
  	<!-- 출근사원수 -->
  	<!-- 퇴근사원수 -->
  	<select id="getOutEmpPage" resultType="com.ddosirak.domain.EmployeeCheckVO">
  		SELECT * FROM emp_check  
  		WHERE DATE(date_time) = DATE(NOW()) AND emp_out IS NOT NULL 
  		ORDER BY date_time DESC 
  		LIMIT #{startRow}, #{pageSize}
  	</select>
  	<!-- 퇴근사원수 -->
  <!-- 페이징 -->
  
  <!-- 필터링 -->
   <!-- 부서 -->
   	<select id="getEmpList_department_name" resultType="com.ddosirak.domain.EmployeeVO">
   		SELECT * FROM emp_main
   		WHERE department_name = #{department_name}
   	</select>
   <!-- 부서 -->
   <!-- 직위 -->
   	<select id="getEmpList_position" resultType="com.ddosirak.domain.EmployeeVO">
   		SELECT * FROM emp_main
   		WHERE position = #{position}
   	</select>
   <!-- 직위 -->
   <!-- 재직현황 -->
   	<select id="getEmpList_employee_status" resultType="com.ddosirak.domain.EmployeeVO">
   		SELECT * FROM emp_main
   		WHERE employee_status = #{employee_status}
   	</select>
   <!-- 재직현황 -->
   <!-- 이름 -->
   	<select id="getEmpList_employee_name" resultType="com.ddosirak.domain.EmployeeVO">
   		SELECT * FROM emp_main
   		WHERE employee_name LIKE CONCAT('%',#{employee_name},'%');
   	</select>
   <!-- 이름 -->
   
  <!-- 필터링 --> 
  </mapper>