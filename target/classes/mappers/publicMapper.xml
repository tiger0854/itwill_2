<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ddosirak.mapper.PublicMapper">
	<!-- IDPW 비교 -->
	<select id="checkIDPW" resultType="com.ddosirak.domain.LoginVO"> 
		SELECT * FROM emp_login 
		WHERE employee_id=#{employee_id} AND employee_pw=#{employee_pw} 
	</select>
	<!-- IDPW 비교 -->
	
	<!-- 출근 -->
	<insert id="employeeIn">
		INSERT INTO emp_check
		(employee_id, emp_in)
		VALUES (#{employee_id}, #{emp_in})
	</insert>
	<!-- 출근 -->
	
	<!-- 퇴근 -->
	<insert id="employeeOut">
		INSERT INTO emp_check
		(employee_id, emp_out)
		VALUES (#{employee_id}, #{emp_out})
	</insert>
	<!-- 퇴근 -->
	
	<!-- 일용직 퇴근시 퇴사로 전환 -->
	<update id="al_out">
		UPDATE emp_main SET employee_status='퇴사' WHERE employee_id=#{employee_id}
	</update>
	<!-- 일용직 퇴근시 퇴사로 전환 -->
	
	<!-- 근태 리스트 -->
	<select id="getInOutList" resultType="com.ddosirak.domain.EmployeeCheckVO">
		SELECT * FROM emp_check WHERE employee_id = #{employee_id}
	</select>
	<!-- 근태 리스트 -->
	
	
	<!-- 게시판 업로드 -->
	<insert id="writeBoard">
		INSERT INTO emp_board 
		(employee_id, title, content, employee_name, position, department_name) 
		VALUES (#{employee_id}, #{title}, #{content}, #{employee_name}, #{position}, #{department_name}) 
	</insert>
	<!-- 게시판 업로드 -->
	
<!-- 페이징 구현부 참고 -->	
	<!-- 게시판 리스트 조회 -->
	<select id="getBoardList" resultType="com.ddosirak.domain.BoardVO">
		SELECT * FROM emp_board 
		ORDER BY emp_bno DESC
		LIMIT #{startRow}, #{pageSize}
	</select>
	<!-- 게시판 리스트 조회 -->
<!-- 페이징 구현부 참고 -->	
	
	<!-- 글 정보 조회 -->
	<select id="getContent" resultType="com.ddosirak.domain.BoardVO">
		SELECT * FROM emp_board WHERE emp_bno=#{emp_bno}
	</select>
	<!-- 글 정보 조회 -->
	
	<!-- 글 정보 수정 -->
	<update id="updateContent">
		UPDATE emp_board SET title=#{title}, content=#{content} WHERE emp_bno=#{emp_bno}
	</update>
	<!-- 글 정보 수정 -->

	<!-- 글 삭제 -->
	<delete id="deleteContent">
		DELETE FROM emp_board WHERE emp_bno=#{emp_bno}
	</delete>
	<!-- 글 삭제 -->
	
	<!-- 조회수 증가 -->
	<update id="addReadCount">
		UPDATE emp_board SET read_count = read_count+1 
		WHERE emp_bno=#{emp_bno}
	</update>
	<!-- 조회수 증가 -->
	
<!-- 사내메신저-->
<!-- 채팅 보내기 -->
	<insert id="chatSend">
		INSERT INTO emp_chat
		(chat_receiver, chat_sender, message, chatRoom_code)
		VALUES (#{chat_receiver}, #{chat_sender}, #{message}, #{chatRoom_code})
	</insert>
<!-- 	채팅 내역 -->
	<select id="getChatList" resultType="com.ddosirak.domain.ChatVO">
		SELECT * FROM emp_chat 
		WHERE chat_receiver = #{login_id} OR chat_sender = #{login_id} 
		ORDER BY time DESC
	</select>
<!-- 	채팅방 리스트 -->
	<select id="getChatRoom" resultType="String">
		SELECT chatRoom_code FROM emp_chatroom 
        WHERE SUBSTRING(chatRoom_code,1,4) = #{login_id} OR SUBSTRING(chatRoom_code,5,8) = #{login_id}
	</select>
	<!-- 	채팅방 리스트 -->
	
	<!-- 한 채팅방 -->
	<select id="getOneChatRoom" resultType="com.ddosirak.domain.ChatRoomVO">
		SELECT * FROM emp_chatroom 
        WHERE chatRoom_code = #{chatRoom_code}
	</select>
	<!-- 한 채팅방 -->
	
	<!-- 채팅방 만들기 -->
	<insert id="makeChatRoom">
		INSERT INTO emp_chatroom
		(chatRoom_code)
		VALUES(#{chatRoom_code})
	</insert>
	<!-- 채팅방 만들기 -->
	<!-- 최근채팅으로 날짜 변경 -->
	<update id="lastChatDate"> 
		UPDATE emp_chatroom SET chatdate = now() ,last_chat = #{message} 
		WHERE chatRoom_code=#{chatRoom_code};
	</update>
	<!-- 최근채팅으로 날짜 변경 -->
	
	<!-- 채팅방의 채팅내역 출력 -->
	<select id="getChatListAll" resultType="com.ddosirak.domain.ChatVO">
		SELECT * FROM emp_chat
		WHERE chatRoom_code = #{chatRoom_code}
		ORDER BY time ASC
	</select>
	<!-- 채팅방의 채팅내역 출력 -->
</mapper>