<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.ddosirak.mapper.QualityMapper">

	<!-- 품질현황 목록 출력 -->
	<select id="qualityList"
		resultType="com.ddosirak.domain.QualityControlVO">
		SELECT DISTINCT
		p.wo_code,
		p.employee_id,
		p.line_code,
		p.item_code,
		p.sQTY,
		p.pQTY,
		p.item_name,
		(
		SELECT COALESCE(SUM(pfQTY), 0)
		FROM prod_perf_add
		WHERE perf_gobd = 'y'
		AND wo_code = p.wo_code
		) +
		COALESCE(ir.total_error_QTY, 0) as total_error_QTY,
		p.line_name
		FROM
		prod p
		LEFT OUTER JOIN
		prod_perf_add pa ON pa.wo_code = p.wo_code
		LEFT
		OUTER JOIN
		items_error_rate ir ON ir.item_code = pa.item_code
		Limit
		#{startRow},
		#{pageSize}
	</select>

	<!-- 품질현황 검색 목록 출력 -->
	<select id="qualitySearchList"
		resultType="com.ddosirak.domain.QualityControlVO">
		SELECT DISTINCT
		p.wo_code,
		p.employee_id,
		p.line_code,
		p.item_code,
		p.sQTY,
		p.pQTY,
		p.item_name,
		(
		SELECT COALESCE(SUM(pfQTY), 0)
		FROM
		prod_perf_add
		WHERE perf_gobd = 'y'
		AND wo_code = p.wo_code
		) +
		COALESCE(ir.total_error_QTY, 0) as total_error_QTY,
		p.line_name
		FROM
		prod p
		LEFT OUTER JOIN
		prod_perf_add pa ON pa.wo_code = p.wo_code
		LEFT
		OUTER JOIN
		items_error_rate ir ON ir.item_code = pa.item_code
		WHERE
		p.wo_code LIKE
		CONCAT('%',
		#{wo_code}, '%')
		AND p.line_code LIKE
		CONCAT('%',
		#{line_code}, '%')
		AND
		p.item_name LIKE CONCAT('%',
		#{item_name}, '%')
		AND p.employee_id LIKE
		CONCAT('%', #{employee_id},
		'%')
		LIMIT
		#{startRow}, #{pageSize}
	</select>

	<!-- 품질 현황 검색 갯수 -->
	<select id="itemCount" resultType="java.lang.Integer">
		SELECT count(*) FROM prod
		<if
			test="line_code != null and item_name != null and employee_id != null and wo_code != null">
			where wo_code like concat('%', #{wo_code}, '%')
			and line_code
			like concat('%', #{line_code}, '%')
			and employee_id like concat('%',
			#{employee_id}, '%')
			and item_name like concat('%', #{item_name}, '%')
		</if>
	</select>

	<!-- 불량리스트 -->
	<select id="errorSearchList"
		resultType="com.ddosirak.domain.QualityControlVO">
		select
		p.wo_code,
		pp.item_code,
		SUM(pp.pfQTY) AS total_QTY,
		SUM(CASE WHEN
		pp.perf_gobd = 'Y' THEN pp.pfQTY ELSE 0 END) AS
		total_error_QTY,
		ie.error_status
		from prod p
		LEFT OUTER JOIN
		prod_perf_add pp
		ON p.wo_code
		= pp.wo_code
		LEFT OUTER JOIN
		items_error_rate ie
		ON pp.wo_code =
		ie.wo_code
		WHERE p.wo_code =
		#{wo_code}
		<if test="item_code != null">
			and pp.item_code LIKE CONCAT('%', #{item_code}, '%')
		</if>
		<if test="error_status != null and error_status != ''">
			and ie.error_status LIKE CONCAT('%', #{error_status}, '%')
		</if>
		AND pp.item_code is not null
		LIMIT #{startRow}, #{pageSize}
	</select>

	<!-- 불량 상태 등록 -->

	<insert id="insertStatus">
		INSERT INTO items_error_rate (wo_code, item_code,
		error_status)
		SELECT
		p.wo_code,
		pp.item_code,
		#{error_status}
		FROM
		prod p
		LEFT OUTER
		JOIN prod_perf_add pp ON p.wo_code = pp.wo_code
		LEFT OUTER
		JOIN
		items_error_rate ie ON ie.wo_code = pp.wo_code
		where p.wo_code = #{wo_code}
		and pp.item_code = #{item_code}
		limit 1
	</insert>

	<!-- 불량 현황 검색 갯수 -->
	<select id="errorCount" resultType="java.lang.Integer">
		select count(*)
		from prod p
		LEFT OUTER JOIN prod_perf_add pp
		ON p.wo_code
		=
		pp.wo_code
		LEFT OUTER JOIN items_error_rate ie
		ON pp.wo_code =
		ie.wo_code
		where p.wo_code LIKE CONCAT('%', #{wo_code}, '%')
		<if test="item_code != null and item_code != ''">
			and pp.item_code LIKE CONCAT('%', #{item_code}, '%')
		</if>
		<if test="error_status != null and error_status != ''">
			and ie.error_status LIKE CONCAT('%', #{error_status}, '%')
		</if>
	</select>

	<!-- 품질검사 등록 -->
	<!-- <insert id="insertInspection" -->
	<!-- parameterType="com.ddosirak.domain.QualityControlVO"> -->
	<!-- <selectKey keyProperty="inspection_number" -->
	<!-- resultType="String" order="BEFORE"> -->
	<!-- SELECT CONCAT('INSP', -->
	<!-- LPAD(IFNULL(MAX(CAST(RIGHT(inspection_number, 4) AS -->
	<!-- UNSIGNED)), 0) + -->
	<!-- 1, 4, '0')) FROM quality -->
	<!-- </selectKey> -->
	<!-- INSERT INTO quality -->
	<!-- (inspection_number, inspection_date, -->
	<!-- inspection_result, iQTY, wo_code, -->
	<!-- inspection_comment, item_name, -->
	<!-- item_code) -->
	<!-- VALUES ( -->
	<!-- #{inspection_number}, -->
	<!-- #{inspection_date}, -->
	<!-- #{inspection_result}, -->
	<!-- #{iQTY}, -->
	<!-- #{wo_code}, -->
	<!-- #{inspection_comment}, -->
	<!-- #{item_name}, -->
	<!-- #{item_code} -->
	<!-- ) -->
	<!-- </insert> -->

	<!-- 품질검사 목록 -->
	<!-- <select id="inspectionList" -->
	<!-- resultType="com.ddosirak.domain.QualityControlVO"> -->
	<!-- select * from quality -->
	<!-- limit #{startRow}, #{pageSize} -->
	<!-- </select> -->

	<!-- <select id="inspectionSearchList" -->
	<!-- resultType="com.ddosirak.domain.QualityControlVO"> -->
	<!-- select * from quality -->
	<!-- WHERE -->
	<!-- inspection_date LIKE CONCAT ('%', -->
	<!-- #{inspection_date}, '%') -->
	<!-- <choose> -->
	<!-- <when test="item_name != null"> -->
	<!-- AND item_name -->
	<!-- LIKE CONCAT('%', -->
	<!-- #{item_name}, '%') -->
	<!-- </when> -->
	<!-- <when test="inspection_result != null"> -->
	<!-- AND -->
	<!-- inspection_result LIKE CONCAT ('%', -->
	<!-- #{inspection_result}, '%') -->
	<!-- </when> -->
	<!-- <otherwise></otherwise> -->
	<!-- </choose> -->
	<!-- limit -->
	<!-- #{startRow}, #{pageSize} -->
	<!-- </select> -->

	<!-- 품질검사 검색 갯수 -->
	<!-- <select id="inspectionCount" resultType="java.lang.Integer"> -->
	<!-- SELECT count(*) FROM -->
	<!-- quality -->
	<!-- WHERE inspection_date LIKE CONCAT ('%', -->
	<!-- #{inspection_date}, -->
	<!-- '%') -->
	<!-- <choose> -->
	<!-- <when test="item_name != null"> -->
	<!-- AND item_name -->
	<!-- LIKE CONCAT('%', -->
	<!-- #{item_name}, '%') -->
	<!-- </when> -->
	<!-- <when test="inspection_result != null"> -->
	<!-- AND -->
	<!-- inspection_result LIKE CONCAT ('%', -->
	<!-- #{inspection_result}, '%') -->
	<!-- </when> -->
	<!-- <otherwise></otherwise> -->
	<!-- </choose> -->
	<!-- </select> -->

	<!-- max(코드) -->
	<!-- <select id="getMaxCode" resultType="String"> -->
	<!-- select max(inspection_number) -->
	<!-- from quality -->
	<!-- </select> -->
	<!-- max(코드) -->

</mapper>